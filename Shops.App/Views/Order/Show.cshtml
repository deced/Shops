@model Shops.App.Models.Order.ShowOrderModel

@{
    ViewData["Title"] = "Create Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card card-waves">
    <div class="card-header">
        Create Order
    </div>
    <div class="card-body">
        <div class="datatable">
            <div class="row">
                <input id="orderId" value="@Model.OrderId" hidden=""/>
                <div class="col-lg-12">
                    <div class="form-group">
                        <label>Shop</label>
                        <input class="e-input" readonly value="@Model.ShopName">
                    </div>
                    <div class="form-group">
                        <label>Shipping Address</label>
                        <input class="e-input" readonly value="@Model.ShippingAddress">
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <ejs-grid id="Grid" selec="rowSelected" dataSource="@Model.Products" rowHeight="45" width="100%">
                            <e-grid-pagesettings pageSize="15" pageSizes="new object[3] { 15, 50, 100 }"></e-grid-pagesettings>
                            <e-grid-columns>
                                <e-grid-column field="Name" headerText="Name"></e-grid-column>
                                <e-grid-column field="Color" headerText="Color"></e-grid-column>
                                <e-grid-column field="Price" headerText="Price" template="#templatePrice">
                                    <e-content-template>
                                        <div id="templatePrice" hidden>${Price} USDT</div>
                                    </e-content-template>
                                </e-grid-column>
                            </e-grid-columns>
                        </ejs-grid>
                    </div>
                    @if (User.IsInRole("admin"))
                    {
                        <button data-toggle="modal" href="#" data-target="#dialogConfirm" onclick="confirmOpen(@Model.OrderId)" class="btn btn-primary">Confirm</button>
                        <button data-toggle="modal" href="#" data-target="#dialogDecline" onclick="declineOpen(@Model.OrderId)" class="btn btn-danger">Decline</button>
                    }
                    <a class="btn btn-primary" href="/Order/Index">Ok</a>
                </div>
            </div>
        </div>
    </div>
</div>

@{ await Html.RenderPartialAsync("PartialConfirm"); }
@{ await Html.RenderPartialAsync("PartialDecline"); }

<script>
    function confirmOpen(ModelId) {
        let id = document.getElementById("confirmId");
        id.value = ModelId;
    }
    
    function declineOpen(ModelId) {
        let id = document.getElementById("declineId");
        id.value = ModelId;
    }
    
    function declineModel() {
        let id = document.getElementById("declineId");
        fetch(`/Order/Decline?id=${id.value}`, {
                method: 'PUT'
            }).then(response =>  window.location.href = "/Order/index")
    }

    function confirmModel() {
        let id = document.getElementById("confirmId");
        fetch(`/Order/Confirm?id=${id.value}`, {
                method: 'PUT'
            }).then(response => window.location.href = "/Order/index")
    }

</script>